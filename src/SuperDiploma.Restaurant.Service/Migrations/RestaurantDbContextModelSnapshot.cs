// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperDiploma.Restaurant.DataContext.EF;

#nullable disable

namespace SuperDiploma.Restaurant.Service.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    partial class RestaurantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.AdminDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdminDbo");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.CategoryDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Перші страви"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Другі страви"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Десерти"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Салати"
                        });
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.CustomerDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("ApartmentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Entrance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CustomerOrders");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.DishMenuItemDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryDboId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryDboId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.OrderDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ReservationId");

                    b.ToTable("OrderOrders");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.OrderItemDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DishMenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("DishMenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.ReservationDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.TableDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TableDbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 4,
                            IsAvailable = true,
                            TableNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 4,
                            IsAvailable = true,
                            TableNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 4,
                            IsAvailable = true,
                            TableNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 4,
                            IsAvailable = true,
                            TableNumber = 4
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 6,
                            IsAvailable = true,
                            TableNumber = 5
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 6,
                            IsAvailable = true,
                            TableNumber = 6
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 6,
                            IsAvailable = true,
                            TableNumber = 7
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 8,
                            IsAvailable = true,
                            TableNumber = 8
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 8,
                            IsAvailable = true,
                            TableNumber = 9
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 2,
                            IsAvailable = true,
                            TableNumber = 10
                        },
                        new
                        {
                            Id = 11,
                            Capacity = 2,
                            IsAvailable = true,
                            TableNumber = 11
                        });
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.DishMenuItemDbo", b =>
                {
                    b.HasOne("SuperDiploma.Restaurant.DataContext.Entities.Models.CategoryDbo", null)
                        .WithMany("Dishes")
                        .HasForeignKey("CategoryDboId");

                    b.HasOne("SuperDiploma.Restaurant.DataContext.Entities.Models.CategoryDbo", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.OrderDbo", b =>
                {
                    b.HasOne("SuperDiploma.Restaurant.DataContext.Entities.Models.CustomerDbo", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperDiploma.Restaurant.DataContext.Entities.Models.ReservationDbo", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId");

                    b.Navigation("Customer");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.OrderItemDbo", b =>
                {
                    b.HasOne("SuperDiploma.Restaurant.DataContext.Entities.Models.DishMenuItemDbo", "DishMenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("DishMenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperDiploma.Restaurant.DataContext.Entities.Models.OrderDbo", "Reservation")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DishMenuItem");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.ReservationDbo", b =>
                {
                    b.HasOne("SuperDiploma.Restaurant.DataContext.Entities.Models.CustomerDbo", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperDiploma.Restaurant.DataContext.Entities.Models.TableDbo", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.CategoryDbo", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.CustomerDbo", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.DishMenuItemDbo", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.OrderDbo", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("SuperDiploma.Restaurant.DataContext.Entities.Models.TableDbo", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
